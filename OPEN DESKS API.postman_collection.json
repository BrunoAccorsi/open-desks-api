{
	"info": {
		"_postman_id": "52a77a05-b646-4722-a7e0-012f433cdc2d",
		"name": "OPEN DESKS API",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "20726550"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"FirstName LastName\",\r\n    \"email\": \"email@email.com\",\r\n    \"role\": \"admin\",\r\n    \"password\": \"12345678\",\r\n    \"passwordConfirmation\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/users/signup"
					},
					"response": []
				},
				{
					"name": "Get all users",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{jwt}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Bruno Acorsi Bergoli2\",\r\n    \"email\": \"b.bergoli3@gmail.com\",\r\n    \"password\": \"12345678\",\r\n    \"passwordConfirmation\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/users"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"email@email.com\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/users/login"
					},
					"response": []
				},
				{
					"name": "change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{jwt}}"
							}
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passwordCurrent\": \"pass12345\",\r\n    \"password\": \"pass12345\",\r\n    \"passwordConfirmation\": \"pass1234567\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/v1/users/updatePassword"
					},
					"response": []
				}
			]
		},
		{
			"name": "Properties",
			"item": [
				{
					"name": "create property",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Beautiful Seaside Villa\",\r\n  \"owner\": \"65ece315af7cf55990349510\", // This should be a valid ObjectId referencing a User in your database\r\n  \"address\": \"123 Ocean View Drive, Beachtown\",\r\n  \"neibornhood\": \"Beachtown Central\",\r\n  \"parkingAvailability\": true,\r\n  \"publicTransitAvailability\": true,\r\n  \"imageCover\": \"url_to_image_cover.jpg\",\r\n  \"images\": [\r\n    \"url_to_image_1.jpg\",\r\n    \"url_to_image_2.jpg\"\r\n  ],\r\n  \"startDates\": [\r\n    \"2024-05-01T00:00:00.000Z\",\r\n    \"2024-06-01T00:00:00.000Z\"\r\n  ],\r\n  \"secretProperty\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/properties"
					},
					"response": []
				},
				{
					"name": "Get all properties",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{jwt}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{URL}}/api/properties"
					},
					"response": []
				},
				{
					"name": "Get property by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{jwt}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{URL}}/api/properties/65ece351af7cf55990349514"
					},
					"response": []
				}
			]
		},
		{
			"name": "Workspaces",
			"item": [
				{
					"name": "Create Workspace",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{jwt}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Modern Co-Working Space\",\r\n  \"property\": \"65ece351af7cf55990349514\",\r\n  \"workspaceType\": \"room\",\r\n  \"leaseTermType\": \"month\",\r\n  \"smokePolicy\": false,\r\n  \"seatingCapacity\": 5,\r\n  \"available\": true,\r\n  \"imageCover\": \"urlToTheImageCover\",\r\n  \"images\": [\"urlToAdditionalImage1\", \"urlToAdditionalImage2\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/workspaces"
					},
					"response": []
				},
				{
					"name": "Get all workspaces",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{jwt}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Modern Co-Working Space\",\r\n  \"property\": \"65ece351af7cf55990349514\",\r\n  \"workspaceType\": \"room\",\r\n  \"leaseTermType\": \"month\",\r\n  \"smokePolicy\": false,\r\n  \"seatingCapacity\": 5,\r\n  \"available\": true,\r\n  \"imageCover\": \"urlToTheImageCover\",\r\n  \"images\": [\"urlToAdditionalImage1\", \"urlToAdditionalImage2\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/workspaces"
					},
					"response": []
				},
				{
					"name": "Get Workspace by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{jwt}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Modern Co-Working Space\",\r\n  \"property\": \"65ece351af7cf55990349514\",\r\n  \"workspaceType\": \"room\",\r\n  \"leaseTermType\": \"month\",\r\n  \"smokePolicy\": false,\r\n  \"seatingCapacity\": 5,\r\n  \"available\": true,\r\n  \"imageCover\": \"urlToTheImageCover\",\r\n  \"images\": [\"urlToAdditionalImage1\", \"urlToAdditionalImage2\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/workspaces/65ece6157c22901b7c8bd30b"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}